package com.personal.test;

import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;

import Screencapture.screenshotcapture;
import reporter.Extentreporter;

import java.lang.reflect.Field;
public class Listeners extends base implements ITestListener {
	ExtentTest test;
	ExtentReports extent = Extentreporter.getreport();
	ThreadLocal<ExtentTest>  threadsafe =new ThreadLocal<ExtentTest>();  // Creating a object for making the extent report thread safe
	@Override
	public void onTestStart(ITestResult result) {
		// TODO Auto-generated method stub
		String methodname= result.getMethod().getMethodName();  // Get the method name and passing it to a String
		test= extent.createTest(methodname);
		threadsafe.set(test);
	}

	@Override
	public void onTestSuccess(ITestResult result) {
		// TODO Auto-generated method stub
		//test.log(Status.PASS, "Test Passed");  // For showing the status as Pass in the report
		threadsafe.get().log(Status.PASS, "Test Passed"); //Instead of using test as in previous step, we are using the threadsafe object to be threadsafe
	}

	@Override
	public void onTestFailure(ITestResult result) {
		// TODO Auto-generated method stub
		//test.fail(result.getThrowable()); // For throwing the log of the failed test case in report
		threadsafe.get().fail(result.getThrowable());   // Instead of using test as in previous step, we are using the threadsafe object to be threadsafe
		WebDriver driver=null;
		Object testObj = result.getInstance(); //Instance of test failed
        Class testClass = result.getTestClass().getRealClass(); //Class in which test failed
        try {
            Field driverField = testClass.getDeclaredField("driver"); //get the driver field of failed test class
            driverField.setAccessible(true); // if driver field is private
             driver = (WebDriver)driverField.get(testObj); // here you get the driver of failed test method

			//driver=(WebDriver) result.getTestClass().getRealClass().getDeclaredField("driver").get(result.getInstance());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String failedmetname= result.getMethod().getMethodName();
		try {
			threadsafe.get().addScreenCaptureFromPath(screenshotcapture.getscreenshot(failedmetname, driver), result.getMethod().getMethodName());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public void onTestSkipped(ITestResult result) {
		// TODO Auto-generated method stub
		ITestListener.super.onTestSkipped(result);
	}

	@Override
	public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
		// TODO Auto-generated method stub
		ITestListener.super.onTestFailedButWithinSuccessPercentage(result);
	}

	@Override
	public void onTestFailedWithTimeout(ITestResult result) {
		// TODO Auto-generated method stub
		ITestListener.super.onTestFailedWithTimeout(result);
	}

	@Override
	public void onStart(ITestContext context) {
		// TODO Auto-generated method stub
		ITestListener.super.onStart(context);
	}

	@Override
	public void onFinish(ITestContext context) {
		// TODO Auto-generated method stub
		extent.flush();
	}

}
